package com.mds.decisionsupport;

/**
 * This class was automatically generated by the data modeler tool.
 */
@org.kie.api.definition.type.Label(value = "Bioportal Links")
public class BioportalLinks  implements java.io.Serializable {

static final long serialVersionUID = 1L;
    
    @org.kie.api.definition.type.Key
    @org.kie.api.definition.type.Label(value = "Ancestors")
    @org.kie.api.definition.type.Position(value = 5)
    private java.lang.String ancestors;
    
    @org.kie.api.definition.type.Key
    @org.kie.api.definition.type.Label(value = "Children")
    @org.kie.api.definition.type.Position(value = 2)
    private java.lang.String children;
    
    @org.kie.api.definition.type.Key
    @org.kie.api.definition.type.Label(value = "@context")
    @org.kie.api.definition.type.Position(value = 10)
    private com.mds.decisionsupport.BioportalLinks context;
    
    @org.kie.api.definition.type.Key
    @org.kie.api.definition.type.Label(value = "Descendants")
    @org.kie.api.definition.type.Position(value = 4)
    private java.lang.String descendants;
    
    @org.kie.api.definition.type.Key
    @org.kie.api.definition.type.Label(value = "Mappings")
    @org.kie.api.definition.type.Position(value = 8)
    private java.lang.String mappings;
    
    @org.kie.api.definition.type.Key
    @org.kie.api.definition.type.Label(value = "Notes")
    @org.kie.api.definition.type.Position(value = 7)
    private java.lang.String notes;
    
    @org.kie.api.definition.type.Key
    @org.kie.api.definition.type.Label(value = "Ontology")
    @org.kie.api.definition.type.Position(value = 1)
    private java.lang.String ontology;
    
    @org.kie.api.definition.type.Key
    @org.kie.api.definition.type.Label(value = "Parents")
    @org.kie.api.definition.type.Position(value = 3)
    private java.lang.String parents;
    
    @org.kie.api.definition.type.Key
    @org.kie.api.definition.type.Label(value = "Self")
    @org.kie.api.definition.type.Position(value = 0)
    private java.lang.String self;
    
    @org.kie.api.definition.type.Key
    @org.kie.api.definition.type.Label(value = "Tree")
    @org.kie.api.definition.type.Position(value = 6)
    private java.lang.String tree;
    
    @org.kie.api.definition.type.Label(value = "ui")
    @org.kie.api.definition.type.Position(value = 9)
    private java.lang.String ui;

    public BioportalLinks() {
    }

    public BioportalLinks(java.lang.String self, java.lang.String ontology, java.lang.String children, java.lang.String parents, java.lang.String descendants, java.lang.String ancestors, java.lang.String tree, java.lang.String notes, java.lang.String mappings, java.lang.String ui, com.mds.decisionsupport.BioportalLinks context) {
        this.self = self;
        this.ontology = ontology;
        this.children = children;
        this.parents = parents;
        this.descendants = descendants;
        this.ancestors = ancestors;
        this.tree = tree;
        this.notes = notes;
        this.mappings = mappings;
        this.ui = ui;
        this.context = context;
    }

    public BioportalLinks(java.lang.String self, java.lang.String ontology, java.lang.String children, java.lang.String parents, java.lang.String descendants, java.lang.String ancestors, java.lang.String tree, java.lang.String notes, java.lang.String mappings, com.mds.decisionsupport.BioportalLinks context) {
        this.self = self;
        this.ontology = ontology;
        this.children = children;
        this.parents = parents;
        this.descendants = descendants;
        this.ancestors = ancestors;
        this.tree = tree;
        this.notes = notes;
        this.mappings = mappings;
        this.context = context;
    }
    
    public java.lang.String getAncestors() {
        return this.ancestors;
    }

    public void setAncestors(  java.lang.String ancestors ) {
        this.ancestors = ancestors;
    }
    
    public java.lang.String getChildren() {
        return this.children;
    }

    public void setChildren(  java.lang.String children ) {
        this.children = children;
    }
    
    public com.mds.decisionsupport.BioportalLinks getContext() {
        return this.context;
    }

    public void setContext(  com.mds.decisionsupport.BioportalLinks context ) {
        this.context = context;
    }
    
    public java.lang.String getDescendants() {
        return this.descendants;
    }

    public void setDescendants(  java.lang.String descendants ) {
        this.descendants = descendants;
    }
    
    public java.lang.String getMappings() {
        return this.mappings;
    }

    public void setMappings(  java.lang.String mappings ) {
        this.mappings = mappings;
    }
    
    public java.lang.String getNotes() {
        return this.notes;
    }

    public void setNotes(  java.lang.String notes ) {
        this.notes = notes;
    }
    
    public java.lang.String getOntology() {
        return this.ontology;
    }

    public void setOntology(  java.lang.String ontology ) {
        this.ontology = ontology;
    }
    
    public java.lang.String getParents() {
        return this.parents;
    }

    public void setParents(  java.lang.String parents ) {
        this.parents = parents;
    }
    
    public java.lang.String getSelf() {
        return this.self;
    }

    public void setSelf(  java.lang.String self ) {
        this.self = self;
    }
    
    public java.lang.String getTree() {
        return this.tree;
    }

    public void setTree(  java.lang.String tree ) {
        this.tree = tree;
    }
    
    public java.lang.String getUi() {
        return this.ui;
    }

    public void setUi(  java.lang.String ui ) {
        this.ui = ui;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        com.mds.decisionsupport.BioportalLinks that = (com.mds.decisionsupport.BioportalLinks)o;
        if (ancestors != null ? !ancestors.equals(that.ancestors) : that.ancestors != null) return false;
        if (children != null ? !children.equals(that.children) : that.children != null) return false;
        if (context != null ? !context.equals(that.context) : that.context != null) return false;
        if (descendants != null ? !descendants.equals(that.descendants) : that.descendants != null) return false;
        if (mappings != null ? !mappings.equals(that.mappings) : that.mappings != null) return false;
        if (notes != null ? !notes.equals(that.notes) : that.notes != null) return false;
        if (ontology != null ? !ontology.equals(that.ontology) : that.ontology != null) return false;
        if (parents != null ? !parents.equals(that.parents) : that.parents != null) return false;
        if (self != null ? !self.equals(that.self) : that.self != null) return false;
        if (tree != null ? !tree.equals(that.tree) : that.tree != null) return false;
        return true;
    }

    @Override
    public int hashCode() {
        int result = 17;
        result = 13 * result + (ancestors != null ? ancestors.hashCode() : 0);
        result = 13 * result + (children != null ? children.hashCode() : 0);
        result = 13 * result + (context != null ? context.hashCode() : 0);
        result = 13 * result + (descendants != null ? descendants.hashCode() : 0);
        result = 13 * result + (mappings != null ? mappings.hashCode() : 0);
        result = 13 * result + (notes != null ? notes.hashCode() : 0);
        result = 13 * result + (ontology != null ? ontology.hashCode() : 0);
        result = 13 * result + (parents != null ? parents.hashCode() : 0);
        result = 13 * result + (self != null ? self.hashCode() : 0);
        result = 13 * result + (tree != null ? tree.hashCode() : 0);
        return result;
    }
}